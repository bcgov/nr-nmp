apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: REPO
    description: Repository name
    value: nr-nmp
  - name: COMPONENT
    description: Component name
    value: database
  - name: ORG
    description: Organization name; e.g. bcgov or bcdevops
    value: bcgov
  - name: TARGET
    description: Deployment target; e.g. PR number, test or prod
    required: true
  - name: TAG
    description: Image tag; e.g. PR number or latest
    required: true
  - name: DB_PVC_SIZE
    description: Database PVC size; e.g. 1Gi
    value: 128Mi
  - name: CPU_REQUEST
    value: 50m
  - name: MEMORY_REQUEST
    value: 150Mi
objects:
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${REPO}-${TARGET}-database
      labels:
        app: ${REPO}-${TARGET}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${DB_PVC_SIZE}
      storageClassName: netapp-file-standard
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: ${REPO}-${TARGET}-database
      labels:
        app: ${REPO}-${TARGET}
    spec:
      replicas: 1
      selector:
        matchLabels:
          deployment: ${REPO}-${TARGET}-database
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        activeDeadlineSeconds: 21600
      template:
        metadata:
          name: ${REPO}-${TARGET}-database
          labels:
            app: ${REPO}-${TARGET}
            deployment: ${REPO}-${TARGET}-database
        spec:
          volumes:
            - name: ${REPO}-${TARGET}-database
              persistentVolumeClaim:
                claimName: ${REPO}-${TARGET}-database
          containers:
            - name: ${REPO}-${TARGET}
              image: ghcr.io/bcgov/${REPO}/database:${TAG}
              ports:
                - containerPort: 5432
                  protocol: TCP
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              readinessProbe:
                exec:
                  command:
                    - /usr/bin/env
                    - bash
                    - "-c"
                    - psql -q -U $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
                successThreshold: 1
                failureThreshold: 5
                initialDelaySeconds: 10
                periodSeconds: 15
                timeoutSeconds: 10
              livenessProbe:
                exec:
                  command:
                    - /usr/bin/env
                    - bash
                    - "-c"
                    - psql -q $POSTGRES_USER -d $POSTGRES_DB -c 'SELECT 1'
                successThreshold: 1
                failureThreshold: 5
                initialDelaySeconds: 10
                periodSeconds: 15
                timeoutSeconds: 10
              env:
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-name
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-password
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-user
              volumeMounts:
                - name: ${REPO}-${TARGET}-database
                  mountPath: "/var/lib/postgresql"
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          schedulerName: default-scheduler
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${REPO}-${TARGET}
      name: ${REPO}-${TARGET}-database
    spec:
      ports:
        - name: postgresql
          nodePort: 0
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        deployment: ${REPO}-${TARGET}-database
      sessionAffinity: None
      type: ClusterIP
