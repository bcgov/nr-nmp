
apiVersion: template.openshift.io/v1
kind: Template
parameters:
  - name: REPO
    description: Repository name
    value: nr-nmp
  - name: COMPONENT
    description: Component name
    value: backend
  - name: ORG
    description: Organization name; e.g. bcgov or bcdevops
    value: bcgov
  - name: TAG
    description: Image tag; e.g. PR number or latest
    required: true
  - name: TARGET
    description: Deployment target; e.g. PR number, test or prod
    required: true
    generate: expression
  - name: SSO_AUTH_SERVER_URL
    description: SSO Auth Server URL
    required: true
  - name: CPU_REQUEST
    value: 50m
  - name: MEMORY_REQUEST
    value: 75Mi
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${REPO}-${TARGET}
      name: ${REPO}-${TARGET}-${COMPONENT}
    spec:
      type: ClusterIP
      ports:
        - port: 3000
          targetPort: 3000
          protocol: TCP
          name: http-3000
      selector:
        service: ${REPO}-${TARGET}-${COMPONENT}
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      labels:
        app: ${REPO}-${TARGET}
        deployment: ${REPO}-${TARGET}-${COMPONENT}
      name: ${REPO}-${TARGET}-${COMPONENT}
    spec:
      strategy:
        type: RollingUpdate
      selector:
        matchLabels:
          deployment: ${REPO}-${TARGET}-${COMPONENT}
      template:
        metadata:
          labels:
            app: ${REPO}-${TARGET}
            deployment: ${REPO}-${TARGET}-${COMPONENT}
            service: ${REPO}-${TARGET}-${COMPONENT}
        spec:
          containers:
            - name: ${REPO}-${TARGET}-${COMPONENT}
              image: ghcr.io/${ORG}/${REPO}/${COMPONENT}:${TAG}
              imagePullPolicy: Always
              env:
                - name: LOG_LEVEL
                  value: info
                - name: POSTGRES_HOST
                  value: ${REPO}-${TARGET}-database
                - name: SSO_AUTH_SERVER_URL
                  value: ${SSO_AUTH_SERVER_URL}
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-name
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-password
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-database
                      key: database-user
                - name: SSO_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-backend
                      key: sso-client-id
                - name: SSO_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${REPO}-${TARGET}-backend
                      key: sso-client-secret
                - name: SSO_REDIRECT_URL
                  value: https://${REPO}-${TARGET}-${COMPONENT}.apps.silver.devops.gov.bc.ca/admin
              ports:
                - name: container-port
                  containerPort: 3000
              readinessProbe:
                tcpSocket:
                  port: container-port
              livenessProbe:
                tcpSocket:
                  port: container-port
              startupProbe:
                tcpSocket:
                  port: container-port
                failureThreshold: 5
                initialDelaySeconds: 15
                periodSeconds: 15
                timeoutSeconds: 10
                failureThreshold: 30
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: ${REPO}-${TARGET}
      name: ${REPO}-${TARGET}-${COMPONENT}
    spec:
      host: ${REPO}-${TARGET}-${COMPONENT}.apps.silver.devops.gov.bc.ca
      port:
        targetPort: http-3000
      to:
        kind: Service
        name: ${REPO}-${TARGET}-${COMPONENT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
