/* eslint-disable default-param-last */
import { PER_DAY_PER_ANIMAL_UNIT, WashWaterUnit } from '@/types';

/**
 * Calculates the solid manure generated by a type of animal in a year, in US tons.
 * @param poundsPerAnimal The coefficient of solid manure per pound per animal per day
 * @param animalsPerFarm The average number of animals on the farm
 * @param daysCollected The number of days manure is collected
 * @param coefficient Optional spot for another coefficient to be multiplied in the calculation
 */
export function calculateAnnualSolidManure(
  poundsPerAnimal: number,
  animalsPerFarm: number,
  daysCollected: number = 365,
  coefficient?: number,
) {
  if (daysCollected > 365 || daysCollected < 0) {
    throw new Error(
      `Invalid number of collection days: can only be 0-365 but received ${daysCollected}`,
    );
  }
  return (poundsPerAnimal * animalsPerFarm * daysCollected * (coefficient || 1)) / 2000; // 1 US ton = 2000 pounds
}

/**
 * Calculates the liquid manure generated by a type of animal in a year, in US gallons.
 * @param galsPerAnimal The coefficient of liquid manure per gallon per animal per day
 * @param animalsPerFarm The average number of animals on the farm
 * @param daysCollected The number of days manure is collected
 * @param coefficient Optional spot for another coefficient to be multiplied in the calculation
 */
export function calculateAnnualLiquidManure(
  galsPerAnimal: number,
  animalsPerFarm: number,
  daysCollected: number = 365,
  coefficient?: number,
) {
  if (daysCollected > 365 || daysCollected < 0) {
    throw new Error(
      `Invalid number of collection days: can only be 0-365 but received ${daysCollected}`,
    );
  }
  return galsPerAnimal * animalsPerFarm * daysCollected * (coefficient || 1);
}

/**
 * Calculates the annual wash water (which is treated as a manure) in US gallons.
 * @param washWater The number for wash water entered by the user
 * @param washWaterUnit The unit of the wash water
 * @param animalsPerFarm The average number of animals on the farm
 */
export function calculateAnnualWashWater(
  washWater: number,
  washWaterUnit: WashWaterUnit,
  animalsPerFarm: number,
) {
  return washWater * 365 * (washWaterUnit === PER_DAY_PER_ANIMAL_UNIT ? animalsPerFarm : 1);
}

export const initAnimals = (state: any) => {
  if (state.nmpFile) {
    const parsedData = JSON.parse(state.nmpFile);
    // Mapping introduces index for DataGrid component to track each animal element.
    return parsedData.years[0].FarmAnimals.map((ele: any, index: number) => ({ ...ele, index }));
  }
  return [];
};
